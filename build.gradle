plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
	id "org.sonarqube" version "3.5.0.2730"
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.enabled true
    }
}


group = 'com.fissionlabs.coe'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
implementation group: 'com.amazonaws', name: 'aws-java-sdk-secretsmanager', version: '1.12.403'
implementation 'org.springframework.boot:spring-boot-starter-validation'
implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.14'


runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

sonarqube {
	properties {
		property "sonar.projectName", "spring-project-learning"
//		property "sonar.branch.name", "main"
		property "sonar.host.url", "http://localhost:9000"
//		property "sonar.login", "sqp_4e9d179cc544511dcb9775d6dc266edf7fa27346"
	}
}
